#!/bin/bash

set -e  # Exit on any error

# ----------- CONFIGURATION -----------

XORG_TOOLS=(
    libx11 libxft libxinerama xorg-server xorg-xinit xorg-xrandr
)

#PULSEAUDIO_TOOLS=(
#    pulseaudio pavucontrol pulsemixer
#)

PIPEWIRE_TOOLS=(
    pipewire pipewire-pulse wireplumber pipewire-alsa pavucontrol pulsemixer
)

FONT_TOOLS=(
    ttf-font-awesome ttf-jetbrains-mono-nerd noto-fonts noto-fonts-emoji ttf-dejavu
)

POWER_TOOLS=(
    tlp tlp-runit tlp-rdw
    thermald thermald-runit
    lm_sensors lm_sensors-runit
)

OTHER_TOOLS=(
    base-devel curl wget git polkit sxhkd rofi feh dunst picom github-cli
    libnotify calcurse cmake nsxiv flameshot ffmpeg ffmpegthumbnailer
    neovim vim nano mpv vlc qbittorrent cronie cronie-runit libqalculate
    qalculate-qt man-db xclip zathura zathura-pdf-mupdf fzf brightnessctl htop
    slock slop newsboat tesseract tesseract-data-eng yazi unzip
)

ALL_TOOLS=(
    "${XORG_TOOLS[@]}"
    "${PIPEWIRE_TOOLS[@]}"
    "${FONT_TOOLS[@]}"
    "${POWER_TOOLS[@]}"
    "${OTHER_TOOLS[@]}"
)

YAY_DIR="$HOME/.local/src/yay-bin"
SRC_DIR="$HOME/.local/src"
DWM_DESKTOP_FILE="./dwm.desktop"
TOUCHPAD_CONF_FILE="./30-touchpad.conf"
CUSTOM_BASH_PROFILE="./append_profile"
CUSTOM_BASHRC="./append_bashrc"

# ----------- FUNCTIONS -----------

command_exists() {
    command -v "$1" &> /dev/null
}

install_tool_group() {
    local name="$1"
    shift
    local tools=("$@")
    echo "üì¶ Installing $name..."
    sudo pacman -S --needed "${tools[@]}"
}

install_mandatory_tools() {
    install_tool_group "Xorg Tools" "${XORG_TOOLS[@]}"
    install_tool_group "Pipewire Tools" "${PIPEWIRE_TOOLS[@]}"
    install_tool_group "Font Tools" "${FONT_TOOLS[@]}"
    install_tool_group "Power Management Tools" "${POWER_TOOLS[@]}"
    install_tool_group "Other Tools" "${OTHER_TOOLS[@]}"
}

install_yay() {
    if command_exists yay; then
        echo "‚úÖ yay is already installed."
        return
    fi

    echo "üîß Setting up yay (AUR helper)..."
    sudo pacman -S --needed git base-devel
    rm -rf "$YAY_DIR"
    mkdir -p "$(dirname "$YAY_DIR")"
    git clone https://aur.archlinux.org/yay-bin.git "$YAY_DIR"
    cd "$YAY_DIR"
    makepkg -si
    cd -
}

copy_config_files() {
    echo "üñºÔ∏è Copying dwm.desktop to /usr/share/xsessions..."
    sudo mkdir -p /usr/share/xsessions
    sudo cp "$DWM_DESKTOP_FILE" /usr/share/xsessions/dwm.desktop

    echo "üñ±Ô∏è Copying 30-touchpad.conf to /etc/X11/xorg.conf.d/..."
    sudo mkdir -p /etc/X11/xorg.conf.d
    sudo cp "$TOUCHPAD_CONF_FILE" /etc/X11/xorg.conf.d/30-touchpad.conf
}

append_to_profile() {
    local marker="# BEGIN custom additions"
    if ! grep -qF "$marker" ~/.bash_profile; then
        echo "üìù Appending custom bash additions to ~/.bash_profile..."
        {
            echo "$marker"
            cat "$CUSTOM_BASH_PROFILE"
            echo "# END custom additions"
        } >> ~/.bash_profile
    else
        echo "‚ÑπÔ∏è Custom bash additions already present in ~/.bash_profile. Skipping."
    fi
}

append_to_bashrc() {
    local marker="# BEGIN custom additions"
    if ! grep -qF "$marker" ~/.bashrc; then
        echo "üìù Appending custom bash additions to ~/.bashrc..."
        {
            echo "$marker"
            cat "$CUSTOM_BASHRC"
            echo "# END custom additions"
        } >> ~/.bashrc
    else
        echo "‚ÑπÔ∏è Custom bash additions already present in ~/.bashrc. Skipping."
    fi
}

create_recordings_dir() {
    echo "üìÅ Creating ~/Public/Recordings directory..."
    mkdir -p "$HOME/Public/Recordings"
}

# ----------- Clone and Build Suckless Tools -----------

clone_and_build_suckless() {
    echo "üîß Cloning and building Suckless tools..."

    declare -A SUCKLESS_REPOS=(
        [dwm]="https://github.com/0xfarco/dwm"
        [dwmblocks]="https://github.com/0xfarco/dwmblocks"
        [dmenu]="https://github.com/0xfarco/dmenu"
        [st]="https://github.com/0xfarco/st"
    )

    mkdir -p "$SRC_DIR"
    for name in "${!SUCKLESS_REPOS[@]}"; do
        repo="${SUCKLESS_REPOS[$name]}"
        dest="$SRC_DIR/$name"

        echo "üì• Cloning $name..."
        rm -rf "$dest"
        git clone "$repo" "$dest"

        echo "‚öôÔ∏è Building and installing $name..."
        cd "$dest"
        make
        sudo make clean install
        cd -
    done
}

# ----------- EXECUTION -----------

if ! command_exists pacman; then
    echo "‚ùå This script is only for Arch-based systems."
    exit 1
fi

install_mandatory_tools
install_yay
copy_config_files
append_to_profile
append_to_bashrc
create_recordings_dir
clone_and_build_suckless

echo "‚úÖ Setup complete."
